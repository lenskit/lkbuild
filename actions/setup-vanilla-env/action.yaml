name: 'Bootstrap LensKit Vanilla Environment'
description: 'Bootstraps a vanilla Python build environment for LensKit CI.'

inputs:
  python-version:
    description: 'Python version to install'
    required: true
    default: '3.9'

  extras:
    description: 'Extras to include in the installed dependencies, in addition to dev dependencies'
    required: false

  include-dev-dependencies:
    description: 'Include the development dependencies (dev & test extras)'
    required: false
    default: true

  constraints-file:
    description: "Constraints file for Pip resolution"
    required: false

  preinstall-helpers:
    description: 'Install lenskit-build-helpersf rom Git'
    required: false
    default: true

  install-with:
    description: 'Specify installation method (flit, pip, or none)'
    required: false
    default: pip

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{inputs.python-version}}
        architecture: x64

    - name: Set up Python build deps
      shell: bash
      env:
        PIP_PREFER_BINARY: 'true'
      run: |
        python -m pip install -U flit wheel

    - name: Preinstalling LensKit build helpers from Git
      if: inputs.preinstall-helpers
      shell: bash
      run: |
        python -m pip install git+https://github.com/lenskit/lkbuild.git

    - name: Install package and dependencies
      if: inputs.install-with == 'pip'
      shell: bash
      env:
        PIP_PREFER_BINARY: 'true'
      run: |
        if [ X"${{inputs.include-dev-dependencies}}" = Xtrue ]; then
          extras="test,dev"
        else
          extras=""
        fi
        for e in $(echo "${{inputs.extras}}" | sed -e 's/,/ /g'); do
          if [ -z "$extras" ]; then
            extras="$e"
          else
            extras="$extras,$e"
          fi
        done
        opts=""
        if [ -n "${{inputs.constraints-file}}" ]; then
          opts="$opts -c ${{inputs.constraints-file}}"
        fi
        echo "installing with extras $extras"
        python -m pip install $opts ".[$extras]"

    - name: Install package and dependencies
      if: inputs.install-with == 'flit'
      shell: bash
      env:
        PIP_PREFER_BINARY: 'true'
      run: |
        if [ X"${{inputs.include-dev-dependencies}}" = Xtrue ]; then
          dep_arg="--deps=develop"
        else
          dep_arg="--deps=production"
        fi
        if [ -n "${{inputs.extras}}" ]; then
          exlist=$(echo "${{inputs.extras}}" |sed -e 's/ /,/g')
          ex_arg="--extras $exlist"
        else
          ex_arg=
        fi
        flit install --pth-file $dep_arg $ex_arg
